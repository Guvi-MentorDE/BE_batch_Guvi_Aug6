Create database mydb2;

use mydb2;

create table if not exists employee(
    id int,
    name VARCHAR(50),
    address VARCHAR(50),
    city VARCHAR(50)
);

insert into employee values(1, 'Guvi', 'address 1', 'Delhi');

select * from employee;

To modify table definitions : "ALTER"

--- add new column named DOB in the TABLE
ALTER table employee ADD city varchar(100);

select * from employee;


--- modify existing column in a TABLE or change datatype of name column or increase lenght of name column
ALTER table employee modify column name varchar(100);

--- delete existing column from given TABLE or remove city column from employee table
ALTER table employee drop column city;

select * from employee;

--- rename the column name to full_name
alter table employee rename column name to full_name;



create table if not exists employee(
    id int,
    name VARCHAR(50),
    age int,
    hiring_date date,
    salary int,
    city varchar(50)
);

insert into employee values(1,'John', 24, '2021-08-10', 10000, 'London');
insert into employee values(2,'Jack', 25, '2021-08-10', 20000, 'Paris');
insert into employee values(3,'Traci', 22, '2021-08-11', 11000, 'London');
insert into employee values(5,'Amit', 25, '2021-08-11', 12000, 'NewYork');
insert into employee values(6,'Akshay', 26, '2021-08-12', 50000, 'Berlin');


--- add unique integrity constraint on id COLUMN

alter table employee add constraint id_unique UNIQUE(id);

insert into employee values(1,'XYZ', 25, '2021-08-10', 50000, 'Gurgaon');

--- drop constraint from existing TABLE
ALTER table employee drop constraint id_unique;

insert into employee values(1,'XYZ', 25, '2021-08-10', 50000, 'Gurgaon');


--- Differen between Drop & Truncate Command

select * from employee;
truncate table employee;

select * from employee;

drop table employee;

---
--- How to apply auto increment
create table table_incr
(
  id int auto_increment,
  name varchar(20),
  age int
  primary key (id)
);

insert into table_incr(name,age) values('Jack',20);
insert into table_incr(name,age) values('Adam',21);


select * from table_incr;

--Ordering

select * from table_incr order by name;

select * from table_incr order by name desc;


# Conditional Operators :    < , > , <= , >= 
# Logical Operator : AND, OR, NOT

# list all employees who are getting salary more than 20000
select * from employee where salary>20000;

# list all employees who are getting salary more than or equal to 20000
select * from employee where salary>=20000;

# list all employees who are getting less than 20000
select * from employee where salary<20000;

# list all employees who are getting salary less than or equal to 20000
select * from employee where salary<=20000;

# we can use != or we can use <>
select * from employee where age != 20;
select * from employee where age <> 20;
select * from employee where age=20;

select * from employee where hiring_date = '2021-08-11' and salary<11500;
select * from employee where hiring_date > '2021-08-11' or salary<20000;


# how to use LIKE operation in where clause
# % -> Zero, one or more than one characters
# _ -> only one character

# get all those employees whose name starts with 'S'
select * from employee where name like 'A%';

#A.....

# get all those employees whose name starts with 'Sh'
select * from employee where name like 'Tr%';

# get all those employees whose name ends with 'l'
select * from employee where name like '%y';

#......l

# get all those employees whose name starts with 'S' and ends with 'k'
select * from employee where name like 'S%k';

# Get all those employees whose name will have exact 5 characters
select * from employee where name like '_____';

# Return all those employees whose name contains atleast 5 characters
select * from employee where name like '%_____%';